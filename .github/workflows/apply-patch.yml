name: Apply Chat Patch

on:
  issue_comment:
    types: [created]

permissions:
  contents: write
  pull-requests: write

jobs:
  run:
    if: contains(github.event.comment.body, '/apply-patch')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # Auth GitHub App (utilise les secrets que tu as déjà mis)
      - name: Auth as GitHub App
        uses: tibdex/github-app-token@v2
        id: app
        with:
          app_id: ${{ secrets.APP_ID }}
          installation_id: ${{ secrets.APP_INSTALLATION_ID }}
          private_key: ${{ secrets.APP_PRIVATE_KEY }}

      - name: Extract patch from comment
        id: patch
        run: |
          python3 - <<'PY'
          import os, re, sys
          body = os.environ["BODY"]
          m = re.search(r"```patch\s*\n(.*?)\n```", body, re.S)
          if not m:
              print("::error::No ```patch``` block found in the comment.")
              sys.exit(1)
          with open("/tmp/changes.patch", "w", encoding="utf-8") as f:
              f.write(m.group(1))
          print("Patch extracted successfully.")
          PY
        env:
          BODY: ${{ github.event.comment.body }}

      - name: Show patch
        run: |
          echo "------ PATCH START ------"
          head -n 50 /tmp/changes.patch || true
          echo "------- PATCH END -------"

      - name: Check patch applies cleanly
        run: |
          if ! git apply --check /tmp/changes.patch; then
            echo "::error::Patch does not apply cleanly."
            exit 1
          fi

      - name: Apply patch
        run: git apply --index /tmp/changes.patch

      - name: Commit & push
        env:
          GH_TOKEN: ${{ steps.app.outputs.token }}
        run: |
          BR="chat-update-${GITHUB_RUN_ID}"
          git checkout -b "$BR"
          git config user.name "chat-bot"
          git config user.email "bot@example.com"
          git commit -m "Apply chat patch from comment"
          git push "https://x-access-token:${GH_TOKEN}@github.com/${GITHUB_REPOSITORY}.git" "$BR"

      - name: Open PR
        uses: actions/github-script@v7
        with:
          github-token: ${{ steps.app.outputs.token }}
          script: |
            const [owner, repo] = process.env.GITHUB_REPOSITORY.split("/");
            const branch = `chat-update-${process.env.GITHUB_RUN_ID}`;
            await github.rest.pulls.create({
              owner, repo,
              head: branch,
              base: "main",
              title: "Chat patch",
              body: "Patch appliqué automatiquement depuis un commentaire contenant ```patch```."
            });
